% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngr_sed_replace_in_files.R
\name{ngr_sed_replace_in_files}
\alias{ngr_sed_replace_in_files}
\title{Replace text in files using sed run in bash.}
\usage{
ngr_sed_replace_in_files(text_current, text_replace, files)
}
\arguments{
\item{text_current}{A character string representing the text to be replaced.}

\item{text_replace}{A character string representing the replacement text.}

\item{files}{A character vector of file paths where the replacement should be applied.}
}
\value{
Invisibly returns the result of the \code{processx::run} command.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#superseded}{\figure{lifecycle-superseded.svg}{options: alt='[Superseded]'}}}{\strong{[Superseded]}}

This function is superseded by \code{ngr_str_replace_in_files()}. Please use \code{ngr_str_replace_in_files()}
for future implementations since it is safer and allows user to review replacements before performing them.

This function performs a bulk find-and-replace operation on a given set of files.
It replaces occurrences of \code{text_current} with \code{text_replace} using \code{sed}, while
handling word boundaries and trailing punctuation.
}
\note{
Running this example will result in modifications to the specified files.
Ensure you are working with test files or have backups before running the function.
}
\examples{
\dontrun{
# Example usage:
# Define the strings to replace and their replacements
keys_matched <- data.frame(
  key_missing = c("exampleOldText", "anotherOldValue"),
  key_missing_guess_match = c("exampleNewText", "anotherNewValue"),
  stringsAsFactors = FALSE
)

# Example files (replace these paths with your own test files)
file_list <- c("test_file1.txt", "test_file2.txt")

# Run the replacements (note: this will modify the specified files!)
purrr::map2(
  .x = keys_matched$key_missing,
  .y = keys_matched$key_missing_guess_match,
  ~ ngr_sed_replace_in_files(text_current = .x, text_replace = .y, files = file_list)
)
}
}
\seealso{
\code{\link[processx:run]{processx::run()}} for running system commands.
}
