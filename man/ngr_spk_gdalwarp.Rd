% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngr_spk_gdalwarp.R
\name{ngr_spk_gdalwarp}
\alias{ngr_spk_gdalwarp}
\title{Generate GDALWarp Command Arguments}
\usage{
ngr_spk_gdalwarp(
  path_in,
  path_out,
  s_srs = NULL,
  t_srs = "EPSG:3005",
  resampling = "bilinear",
  target_resolution = c(0.15, 0.15),
  overwrite = TRUE,
  interactive = FALSE,
  params_default = c("-multi", "-wo", "NUM_THREADS=ALL_CPUS"),
  params_add = NULL
)
}
\arguments{
\item{path_in}{\link{character} A vector of file paths to input rasters. Must be valid file paths.}

\item{path_out}{\link{character} A single file path for the output raster. The directory must exist.}

\item{s_srs}{\link{character} or \link{NULL} Optional. The source spatial reference system in any GDAL-supported format
(e.g., EPSG codes, PROJ strings). Defaults to \code{NULL}, meaning it will be inferred from the input raster.}

\item{t_srs}{\link{character} The target spatial reference system in any GDAL-supported format. Defaults to \code{"EPSG:3005"}.}

\item{resampling}{\link{character} The resampling method. One of \code{"nearest"}, \code{"bilinear"}, \code{"cubic"}, \code{"cubicspline"},
\code{"lanczos"}, \code{"average"}, \code{"mode"}. Defaults to \code{"bilinear"}.}

\item{target_resolution}{\link{numeric} A numeric vector of length 2 specifying the output pixel resolution in meters for
the x and y directions. Defaults to \code{c(0.15, 0.15)} (15cm x 15cm pixels).}

\item{overwrite}{\link{logical} Whether to overwrite the output file if it exists. Defaults to \code{TRUE}.}

\item{interactive}{\link{logical} Whether to return the full \code{gdalwarp} command as a string for manual use. Defaults to \code{FALSE}.}

\item{params_default}{\link{character} or \link{NULL} Optional. A character vector of default parameters to include in the
\code{gdalwarp} command. Defaults to \code{c("-multi", "-wo", "NUM_THREADS=ALL_CPUS")}.}

\item{params_add}{\link{character} or \link{NULL} Optional. A character vector of additional parameters to include in the
\code{gdalwarp} command.}
}
\value{
\link{character} A vector of arguments for programmatic use or a complete command string if \code{interactive = TRUE}.
}
\description{
Constructs the command-line arguments for GDAL's \code{gdalwarp} utility, allowing for flexible reprojection and
resampling of raster data. The function can return either a vector of arguments for programmatic use or a complete
command string for manual execution when \code{interactive = TRUE}.
}
\details{
The function constructs command-line arguments for \code{gdalwarp}, enabling flexible raster reprojection, resampling, and
transformation. Note that \code{gdalwarp} requires GDAL to be installed on your system. On macOS, you can install GDAL
using Homebrew by running \verb{brew install gdal}. For more details on \code{gdalwarp}, visit: \url{https://gdal.org/en/stable/programs/gdalwarp.html}.
}
\examples{
\dontrun{
# Generate arguments for programmatic use
args <- ngr_spk_gdalwarp(
  path_in = c("input1.tif", "input2.tif"),
  path_out = "output.tif",
  s_srs = "EPSG:4326",
  t_srs = "EPSG:3857",
  target_resolution = c(0.1, 0.1)
)

# Generate a full command for manual use
cmd <- ngr_spk_gdalwarp(
  path_in = c("input1.tif", "input2.tif"),
  path_out = "output.tif",
  s_srs = "EPSG:4326",
  t_srs = "EPSG:3857",
  target_resolution = c(0.1, 0.1),
  interactive = TRUE
)
cat(cmd, "\n")
}

}
\seealso{
\href{https://gdal.org/en/stable/programs/gdalwarp.html}{gdalwarp documentation}

Other spacehakr: 
\code{\link{ngr_spk_ext_raster}()},
\code{\link{ngr_spk_join}()},
\code{\link{ngr_spk_layer_info}()},
\code{\link{ngr_spk_odm}()},
\code{\link{ngr_spk_poly_to_points}()},
\code{\link{ngr_spk_res}()}

Other processx: 
\code{\link{ngr_spk_odm}()}
}
\concept{gdal}
\concept{processx}
\concept{spacehakr}
