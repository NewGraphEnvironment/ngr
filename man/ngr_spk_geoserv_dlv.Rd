% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngr_spk_geoserv_dlv.R
\name{ngr_spk_geoserv_dlv}
\alias{ngr_spk_geoserv_dlv}
\title{Download a Vector Layer from a GeoServer WFS}
\usage{
ngr_spk_geoserv_dlv(
  url_geoserver = "https://maps.skeenasalmon.info/geoserver/ows",
  dir_out = NULL,
  layer_name_raw = NULL,
  layer_name_out = stringr::str_extract(layer_name_raw, "(?<=:).*"),
  crs = 3005,
  bbox = NULL,
  format_out = "json"
)
}
\arguments{
\item{url_geoserver}{\link{character} A single URL string to the GeoServer WFS endpoint.}

\item{dir_out}{\link{character} A directory path where the output file will be saved. Must exist or be creatable.}

\item{layer_name_raw}{\link{character} A WFS layer name, usually including a namespace (e.g., \code{geonode:LayerName}).}

\item{layer_name_out}{\link{character} Optional. Output file name without extension. Defaults to the name extracted from \code{layer_name_raw}.}

\item{crs}{\link{integer} EPSG code for the coordinate reference system to request from the server. Default is 3005.}

\item{bbox}{\link{bbox} or \link{numeric} Optional. A bounding box to filter features spatially. Must be in the same CRS or coercible.}

\item{format_out}{\link{character} WFS output format. Common values: "json", "GML2", "shape-zip". Default is "json" and function will need to be modified in the future to accomodate other formats.}
}
\value{
Invisibly returns the output file path on success. Prints status messages to console.
}
\description{
This function downloads a single vector layer from a WFS (Web Feature Service)
endpoint and saves it locally in GeoJSON or another supported format.
}
\details{
By default, the \code{layer_name_out} is inferred from \code{layer_name_raw} by removing
a namespace prefix (e.g., \verb{geonode:}), which is common in GeoServer layers.

If a bounding box is passed as a \code{sf::st_bbox()} object and it has a different CRS
than the target CRS, it will be transformed using \code{sf::st_transform()}.
}
\examples{
\dontrun{
dir_out <- "data"
layer_name_raw <- "geonode:UBulkley_wshed"
ngr_spk_geoserv_dlv(
  dir_out = dir_out,
  layer_name_raw = layer_name_raw
)
}

}
\seealso{
\code{\link[fs:create]{fs::dir_create()}}, \code{\link[fs:path]{fs::path()}}, \code{\link[sf:st_bbox]{sf::st_bbox()}}, \code{\link[sf:st_transform]{sf::st_transform()}}
}
