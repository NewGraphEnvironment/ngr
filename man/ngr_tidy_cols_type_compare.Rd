% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngr_tidy_cols_type_compare.R
\name{ngr_tidy_cols_type_compare}
\alias{ngr_tidy_cols_type_compare}
\title{Compare Column Type Consistency Across Nested Dataframes}
\usage{
ngr_tidy_cols_type_compare(nested_list_df)
}
\arguments{
\item{nested_list_df}{\link{list} A named list of dataframes, where each dataframe is expected to have consistent column names.}
}
\value{
A \link{data.frame} with the following columns:
\itemize{
\item \code{col_name}: The name of the column.
\item \code{types}: A comma-separated string of unique types found for the column across all datasets.
\item \code{consistent}: A logical value indicating whether the column types are consistent across all datasets.
}
}
\description{
This function checks for column type consistency across multiple dataframes nested in a list.
}
\details{
This function inspects the class of each column across a list of dataframes. It aggregates the unique types for each column and determines if the column types are consistent across all datasets in the list.
}
\examples{
nested_list_df <- list(
  df1 = data.frame(a = 1:3, b = c("x", "y", "z"), c = as.Date("2023-01-01") + 0:2, stringsAsFactors = FALSE),
  df2 = data.frame(a = c(1.1, 2.2, 3.3), b = c("x", "y", "z"), c = c(TRUE, FALSE, TRUE), stringsAsFactors = FALSE),
  df3 = data.frame(a = c("one", "two", "three"), b = c("x", "y", "z"), c = as.Date("2023-01-01") + 0:2, stringsAsFactors = FALSE)
)
ngr_tidy_cols_type_compare(nested_list_df)

}
\seealso{
Other tidy: 
\code{\link{ngr_tidy_cols_rm_na}()},
\code{\link{ngr_tidy_type}()}
}
\concept{tidy}
