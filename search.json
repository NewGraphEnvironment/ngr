[{"path":"https://newgraphenvironment.github.io/ngr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ngr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allan Irvine. Author, maintainer.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Irvine (2025). ngr: New Graph Reporting. R package version 0.0.1, https://github.com/NewGraphEnvironment/ngr/.","code":"@Manual{,   title = {ngr: New Graph Reporting},   author = {Allan Irvine},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/NewGraphEnvironment/ngr/}, }"},{"path":"https://newgraphenvironment.github.io/ngr/index.html","id":"ngr","dir":"","previous_headings":"","what":"New Graph Reporting","title":"New Graph Reporting","text":"Just place put random reporting functions related New Graph Environment reporting. Super unstable likely change functions often removed put specific packages names fun.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"New Graph Reporting","text":"can install development version ngr GitHub :","code":"# install.packages(\"devtools\") pak::pkg_install(\"NewGraphEnvironment/ngr\")"},{"path":"https://newgraphenvironment.github.io/ngr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"New Graph Reporting","text":"basic example shows solve common problem:","code":"library(ngr) ## basic example code"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ngr: New Graph Reporting — ngr-package","title":"ngr: New Graph Reporting — ngr-package","text":"Functions used dynamic reporting.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ngr: New Graph Reporting — ngr-package","text":"Maintainer: Allan Irvine al@newgraphenvironment.com (ORCID)","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"function generates SQL query filter join tables based spatial predicates. work SQL database supports spatial functions.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"","code":"ngr_dbqs_filter_predicate(   target_tbl,   mask_tbl,   target_col_return = \"*\",   mask_col_return = NULL,   mask_col_filter = NULL,   mask_col_filter_values = NULL,   mask_col_filter_values_negate = FALSE,   function_spatial = \"ST_Intersects\",   quote_tbl = FALSE,   ... )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"target_tbl character name target table. Required. mask_tbl character name mask table. Required. target_col_return character Columns return target table. Default '*', meaning columns. mask_col_return character Columns return mask table. Default NULL, meaning columns returned. mask_col_filter character column mask table used filtering. Default NULL. mask_col_filter_values character Values filter mask column . Default NULL. mask_col_filter_values_negate logical Whether negate filter condition mask column. Default FALSE. function_spatial character spatial function use filtering, e.g., \"ST_Intersects\". Default \"ST_Intersects\". Valid options : ST_Intersects ST_Contains ST_Within ST_Overlaps ST_Crosses ST_Touches details spatial functions, see PostGIS Query Functions. quote_tbl logical Whether quote table names handle special characters. Default FALSE. Allows quoting adjusted can used geopackage table names periods .  Uses ngr_dbqs_tbl_quote() quote table names. ... Additional arguments passed ngr::ngr_fdb_tbl_quote() quote_tbl TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"character SQL query string.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"enable geopackage support: Install spatialite-tools cmd line brew install spatialite-tools Find installation cmd line find /opt/homebrew -name mod_spatialite.dylib Connect GeoPackage R con <- DBI::dbConnect(RSQLite::SQLite(), path_to_gpkg) Load SpatiaLite dbExecute(con, \"SELECT load_extension('/opt/homebrew/lib/mod_spatialite.dylib');\") Run queries DBI::dbGetQuery(con, query = ngr_dbqs_filter_predicate(blah, blah, blah, quote_tbl = TRUE))","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_filter_predicate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a SQL Query Using Spatial Predicates — ngr_dbqs_filter_predicate","text":"","code":"ngr_dbqs_filter_predicate(   target_tbl = \"target_table\",   mask_tbl = \"mask_table\",   target_col_return = c(\"col1\", \"col2\"),   mask_col_return = c(\"filter_col\"),   mask_col_filter = \"filter_col\",   mask_col_filter_values = c(\"value1\", \"value2\"),   function_spatial = \"ST_Intersects\" ) #> SELECT target.col1, target.col2, mask.filter_col FROM target_table AS target JOIN mask_table AS mask ON ST_Intersects(target.geom, mask.geom) AND mask.filter_col IN ('value1', 'value2');"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"Constructs PostgreSQL ltree literal character string. useful composing queries rely ltree path syntax.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"","code":"ngr_dbqs_ltree(x)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"x character single string character vector cast ltree.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"character string character vector PostgreSQL ltree-compatible text. element wrapped single quotes cast ::ltree.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"function typically used help construct PostgreSQL queries operate ltree data types. simply formats input string PostgreSQL ltree cast syntax.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_ltree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast Character to PostgreSQL ltree — ngr_dbqs_ltree","text":"","code":"ngr_dbqs_ltree(\"400.431358.623573\") #> [1] \"'400.431358.623573'::ltree\""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":null,"dir":"Reference","previous_headings":"","what":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"function wraps table name specified type quotation marks, ensuring compatibility SQL queries.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"","code":"ngr_dbqs_tbl_quote(table_name, quote_type = \"double\")"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"table_name character single string representing table name quoted. quote_type character single string specifying type quote use, either 'single' 'double'. Default 'double'.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"character table name wrapped specified type quotation marks.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"function uses glue::glue() format table name either single double quotes. invalid quote_type specified, error thrown.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_dbqs_tbl_quote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quote a Table Name for SQL Queries — ngr_dbqs_tbl_quote","text":"","code":"ngr_dbqs_tbl_quote(\"my_table\") #> \"my_table\" ngr_dbqs_tbl_quote(\"my_table\", quote_type = \"single\") #> 'my_table'"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_copy_if_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","title":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","text":"Recursively lists files dir_in copies relative path dir_out, skipping files already exist.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_copy_if_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","text":"","code":"ngr_fs_copy_if_missing(dir_in, dir_out)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_copy_if_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","text":"dir_in Character. Path input directory. dir_out Character. Path output directory.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_copy_if_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","text":"Invisibly returns NULL. Used side effects (file copying).","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_copy_if_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy files from one directory to another only if they don't already exist — ngr_fs_copy_if_missing","text":"","code":"dir_in <- fs::dir_create(fs::path(tempfile(), \"a\")) dir_out <- fs::dir_create(fs::path(tempfile(), \"b\")) fs::file_create(fs::path(dir_in, \"test.txt\")) ngr_fs_copy_if_missing(fs::path_dir(dir_in), fs::path_dir(dir_out)) fs::file_exists(fs::path(dir_out, \"a\", \"test.txt\")) #> /tmp/RtmpNTVyVB/file20f6156af5c3/b/a/test.txt  #>                                         FALSE"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_id_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify files in dir_in that are missing in dir_out — ngr_fs_id_missing","title":"Identify files in dir_in that are missing in dir_out — ngr_fs_id_missing","text":"Returns paths dir_in exist relative path dir_out.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_id_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify files in dir_in that are missing in dir_out — ngr_fs_id_missing","text":"","code":"ngr_fs_id_missing(dir_in, dir_out)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_id_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify files in dir_in that are missing in dir_out — ngr_fs_id_missing","text":"dir_in Character. Path input directory. dir_out Character. Path output directory.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_fs_id_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify files in dir_in that are missing in dir_out — ngr_fs_id_missing","text":"character vector input file paths missing dir_out.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve GitHub Issues — ngr_git_issue","title":"Retrieve GitHub Issues — ngr_git_issue","text":"Queries issues specified repository using GitHub REST API returns tibble selected fields. Includes issues open specified date created .","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve GitHub Issues — ngr_git_issue","text":"","code":"ngr_git_issue(   owner,   repo,   date_since,   token = Sys.getenv(\"GITHUB_PAT\"),   fields_return = c(\"url\", \"title\", \"body\", \"comments_url\", \"created_at\", \"closed_at\",     \"milestone$title\") )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve GitHub Issues — ngr_git_issue","text":"owner character  GitHub user organization name (e.g., \"NewGraphEnvironment\"). repo character  Repository name (e.g., \"ngr\"). date_since character  (ISO 8601 datetime date). Issues must open created date. token character  GitHub personal access token. Defaults Sys.getenv(\"GITHUB_PAT\"). Required access private repositories. fields_return character  vector fields return. Supports nested fields using \"$\" notation (e.g., \"milestone$title\").","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve GitHub Issues — ngr_git_issue","text":"tibble columns specified fields_return.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve GitHub Issues — ngr_git_issue","text":"","code":"ngr_git_issue(   owner = \"NewGraphEnvironment\",   repo = \"ngr\",   date_since = \"2024-01-01\",   token = NULL ) #> # A tibble: 16 × 7 #>    url             title body  comments_url created_at closed_at milestone.title #>    <chr>           <chr> <chr> <chr>        <chr>      <chr>     <chr>           #>  1 https://api.gi… Deve… \"\\nw… https://api… 2025-07-1… 2025-07-… Develop series… #>  2 https://api.gi… Issu…  NA   https://api… 2025-06-1… 2025-06-… NA              #>  3 https://api.gi… `ngr… \"see… https://api… 2025-06-1… NA        NA              #>  4 https://api.gi… Prov…  NA   https://api… 2025-06-1… 2025-06-… NA              #>  5 https://api.gi… func… \"Coe… https://api… 2025-05-2… 2025-05-… Functions to m… #>  6 https://api.gi… `ngr… \"Ret… https://api… 2025-05-1… 2025-05-… Build git api … #>  7 https://api.gi… `ngr… \"ret… https://api… 2025-05-1… 2025-05-… Build git api … #>  8 https://api.gi… Add … \"wil… https://api… 2025-04-0… NA        NA              #>  9 https://api.gi… `ngr… \"Eve… https://api… 2025-02-0… 2025-02-… NA              #> 10 https://api.gi… move… \"mos… https://api… 2025-01-2… NA        Develop series… #> 11 https://api.gi… ngr_… \"Con… https://api… 2025-01-2… 2025-01-… Develop series… #> 12 https://api.gi… `ngr… \"Com… https://api… 2025-01-2… 2025-01-… Develop series… #> 13 https://api.gi… `ngr… \"get… https://api… 2025-01-2… 2025-01-… Develop series… #> 14 https://api.gi… `ngr… \"Gen… https://api… 2025-01-1… 2025-01-… Develop series… #> 15 https://api.gi… get … \"Rem… https://api… 2025-01-1… 2025-01-… NA              #> 16 https://api.gi… extr… \"use… https://api… 2025-01-1… NA        NA"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"function retrieves timeline event details specified GitHub issue using GitHub API. default, filters events associated commits .","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"","code":"ngr_git_issue_details(   issue_url_json,   token = Sys.getenv(\"GITHUB_PAT\"),   endpoint = \"timeline\",   events_all = FALSE )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"issue_url_json character. full GitHub API URL issue (e.g., \"https://api.github.com/repos/user/repo/issues/123\"). token character. GitHub personal access token (PAT). Default Sys.getenv(\"GITHUB_PAT\"). endpoint character. API endpoint use retrieving issue events. Defaults \"timeline\". access administrative actions like mentioned, labeling assigning. events_all logical. TRUE, return events. FALSE (default), return associated commits (.e., non-null commit_id).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"tibble columns: issue_url_json, event, commit_id, commit_url_json, created_at.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"GitHub Issue Event Types: https://docs.github.com/en/rest/using--rest-api/issue-event-types","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_git_issue_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GitHub Issue Timeline or Event Details — ngr_git_issue_details","text":"","code":"ngr_git_issue_details(\"https://api.github.com/repos/NewGraphEnvironment/fpr/issues/13\") #> # A tibble: 0 × 0 ngr_git_issue_details(\"https://api.github.com/repos/NewGraphEnvironment/fpr/issues/13\", events_all = TRUE) #> # A tibble: 5 × 3 #>   issue_url_json                                                event created_at #>   <chr>                                                         <chr> <chr>      #> 1 https://api.github.com/repos/NewGraphEnvironment/fpr/issues/… labe… 2022-12-1… #> 2 https://api.github.com/repos/NewGraphEnvironment/fpr/issues/… assi… 2022-12-1… #> 3 https://api.github.com/repos/NewGraphEnvironment/fpr/issues/… clos… 2022-12-2… #> 4 https://api.github.com/repos/NewGraphEnvironment/fpr/issues/… reop… 2022-12-2… #> 5 https://api.github.com/repos/NewGraphEnvironment/fpr/issues/… comm… 2022-12-2…"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_hyd_realtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Realtime HYDAT Data for a Station — ngr_hyd_realtime","title":"Retrieve Realtime HYDAT Data for a Station — ngr_hyd_realtime","text":"Convenience function fetch primary secondary water survey parameters given HYDAT station specified number days. Wraps tidyhydat::realtime_ws() main advantage relies availability temperature data (param_primary present attempt obtain secondary data.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_hyd_realtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Realtime HYDAT Data for a Station — ngr_hyd_realtime","text":"","code":"ngr_hyd_realtime(   id_station = NULL,   param_primary = c(5),   param_secondary = c(1, 18, 19, 41, 46, 6, 7, 8, 10, 40, 47),   days_back = 581 )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_hyd_realtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Realtime HYDAT Data for a Station — ngr_hyd_realtime","text":"id_station character single station identifier string. param_primary numeric numeric vector primary HYDAT parameter codes. param_secondary numeric numeric vector secondary HYDAT parameter codes. data retrieved primary data available. See available options tidyhydat::param_id days_back numeric single integer specifying many days back fetch data. Defaults 581 seems maximum amount retrievable","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_hyd_realtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Realtime HYDAT Data for a Station — ngr_hyd_realtime","text":"list two elements: primary_data secondary_data, data frame results. Returns NULL failure prints CLI alert.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_pkg_detach.html","id":null,"dir":"Reference","previous_headings":"","what":"Detach a package — ngr_pkg_detach","title":"Detach a package — ngr_pkg_detach","text":"function convenience wrapper around [detach()] unload package. designed speed development testing package development report writing.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_pkg_detach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detach a package — ngr_pkg_detach","text":"","code":"ngr_pkg_detach(pkg)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_pkg_detach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detach a package — ngr_pkg_detach","text":"pkg character single string representing name package detach.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_pkg_detach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detach a package — ngr_pkg_detach","text":"Invisibly returns NULL.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_pkg_detach.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detach a package — ngr_pkg_detach","text":"","code":"if (FALSE) { # \\dontrun{ ngr_pkg_detach(\"ngr\") } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Files from a Directory — ngr_s3_dl","title":"Download Files from a Directory — ngr_s3_dl","text":"function downloads files matching specified pattern directory URL local folder.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Files from a Directory — ngr_s3_dl","text":"","code":"ngr_s3_dl(url, path, glob = \"\\\\.tif$\", timeout_limit = 3600, ...)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Files from a Directory — ngr_s3_dl","text":"url character URL directory containing files download. can FTP, HTTP, S3 directory. path character local path files downloaded. glob character regular expression pattern match file types. Default \"\" downloading files. Can use options \"\\\\.tif$\" download tif files \"11\\\\.tif$\" download tiff files filenames end 11. timeout_limit numeric timeout limit file downloads seconds. Default 3600 (60 minutes). ... Empty. passing arguments curl::multi_download()","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Files from a Directory — ngr_s3_dl","text":"tibble curl::multi_download() indicating completion download process path downloaded files.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Files from a Directory — ngr_s3_dl","text":"function parses HTML page provided URL, identifies links matching specified pattern, downloads file specified local directory. Note work S3 buckets exposed static websites (e.g., http://example-bucket.s3-website-region.amazonaws.com).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_dl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Files from a Directory — ngr_s3_dl","text":"","code":"# \\dontrun{ # Download all .tiff and .pdf files from the main directory of a static S3 bucket url <- \"http://example-bucket.s3-website-region.amazonaws.com\" path <- \"./downloaded_files\" glob <- \"\\\\.(tiff|pdf)$\" ngr_s3_dl(url, path, glob) #> Error in open.connection(x, \"rb\"): cannot open the connection # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate S3 Index HTML — ngr_s3_files_to_index","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"function generates index.html file link S3 bucket's contents. Can loaded bucket provide simple web interface browsing files. now need sure run cmd line see though aws s3 website s3://{my_bucket_name}/ --index-document index.html","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"","code":"ngr_s3_files_to_index(   files,   dir_output = \".\",   filename_output = \"index.html\",   ask = TRUE,   header1 = \"Index\" )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"files character character vector file directory names (e.g., \"file1.txt\", \"folder/\"). dir_output character string specifying output directory file created. Defaults current working directory (\".\"). filename_output character string specifying name output file. Defaults \"index.html\". ask logical logical value indicating whether prompt user overwriting existing file. Defaults TRUE. header1 character string specifying <h1> title HTML page. Defaults \"Index\".","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"character Invisibly returns path generated file.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"function uses ngr_s3_path_to_https() convert file paths HTTPS links constructing HTML.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_files_to_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate S3 Index HTML — ngr_s3_files_to_index","text":"","code":"# Example input files <- c(\"file1.txt\", \"file2.txt\", \"folder1/\", \"folder2/\")  # Specify a custom output directory and filename ngr_s3_files_to_index(files, dir_output = \"output_dir\", filename_output = \"custom_index.html\", header1 = \"My Custom Index\") #> Error in FUN(X[[i]], ...): The input must start with 's3://'."},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"function converts S3 path corresponding https website-specific http URL.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"","code":"ngr_s3_path_to_https(s3_path, website = FALSE, aws_region = \"us-west-2\")"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"s3_path character single S3 path convert, starting \"s3://\". website logical Whether construct static website hosting URL. Default FALSE. can used serve index.html file via http (unsecured) like ones created ngr_s3_files_to_index(). aws_region character AWS region bucket. Default \"us-west-2\".","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"character https http URL corresponding S3 path.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"function removes \"s3://\" prefix, splits remaining path bucket name object key, constructs https URL format https://<bucket>.s3.amazonaws.com/<key>. website = TRUE, constructs http URL format http://<bucket>.s3-website-<region>.amazonaws.com/<key>. Note: HTTPS supported static website URLs directly S3; use CloudFront HTTPS.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_s3_path_to_https.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an S3 Path to an https URL — ngr_s3_path_to_https","text":"","code":"# Example usage: ngr_s3_path_to_https(\"s3://my-bucket/my-object.txt\") #> [1] \"https://my-bucket.s3.amazonaws.com/my-object.txt\" ngr_s3_path_to_https(\"s3://my-bucket/my-object.txt\", website = TRUE) #> [1] \"http://my-bucket.s3-website-us-west-2.amazonaws.com/my-object.txt\""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"function superseded ngr_str_replace_in_files(). Please use ngr_str_replace_in_files() future implementations since safer allows user review replacements performing . function performs bulk find--replace operation given set files. replaces occurrences text_current text_replace using sed, handling word boundaries trailing punctuation.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"","code":"ngr_sed_replace_in_files(text_current, text_replace, files)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"text_current character string representing text replaced. text_replace character string representing replacement text. files character vector file paths replacement applied.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"Invisibly returns result processx::run command.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"Running example result modifications specified files. Ensure working test files backups running function.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_sed_replace_in_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace text in files using sed run in bash. — ngr_sed_replace_in_files","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: # Define the strings to replace and their replacements keys_matched <- data.frame(   key_missing = c(\"exampleOldText\", \"anotherOldValue\"),   key_missing_guess_match = c(\"exampleNewText\", \"anotherNewValue\"),   stringsAsFactors = FALSE )  # Example files (replace these paths with your own test files) file_list <- c(\"test_file1.txt\", \"test_file2.txt\")  # Run the replacements (note: this will modify the specified files!) purrr::map2(   .x = keys_matched$key_missing,   .y = keys_matched$key_missing_guess_match,   ~ ngr_sed_replace_in_files(text_current = .x, text_replace = .y, files = file_list) ) } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"Constructs command-line arguments GDAL's gdalwarp utility, allowing flexible reprojection resampling raster data. function can return either vector arguments programmatic use complete command string manual execution interactive = TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"","code":"ngr_spk_gdalwarp(   path_in,   path_out,   s_srs = NULL,   t_srs = \"EPSG:3005\",   resampling = \"bilinear\",   target_resolution = c(0.15, 0.15),   overwrite = TRUE,   interactive = FALSE,   params_default = c(\"-multi\", \"-wo\", \"NUM_THREADS=ALL_CPUS\"),   params_add = NULL )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"path_in character vector file paths input rasters. Must valid file paths. path_out character single file path output raster. directory must exist. s_srs character NULL Optional. source spatial reference system GDAL-supported format (e.g., EPSG codes, PROJ strings). Defaults NULL, meaning inferred input raster. t_srs character target spatial reference system GDAL-supported format. Defaults \"EPSG:3005\". resampling character resampling method. One \"nearest\", \"bilinear\", \"cubic\", \"cubicspline\", \"lanczos\", \"average\", \"mode\". Defaults \"bilinear\". target_resolution numeric numeric vector length 2 specifying output pixel resolution meters x y directions. Defaults c(0.15, 0.15) (15cm x 15cm pixels). overwrite logical Whether overwrite output file exists. Defaults TRUE. interactive logical Whether return full gdalwarp command string manual use. Defaults FALSE. params_default character NULL Optional. character vector default parameters include gdalwarp command. Defaults c(\"-multi\", \"-wo\", \"NUM_THREADS=ALL_CPUS\"). params_add character NULL Optional. character vector additional parameters include gdalwarp command.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"character vector arguments programmatic use complete command string interactive = TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"function constructs command-line arguments gdalwarp, enabling flexible raster reprojection, resampling, transformation. Note gdalwarp requires GDAL installed system. macOS, can install GDAL using Homebrew running brew install gdal. details gdalwarp, visit: https://gdal.org/en/stable/programs/gdalwarp.html.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_gdalwarp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate GDALWarp Command Arguments — ngr_spk_gdalwarp","text":"","code":"if (FALSE) { # \\dontrun{ # Generate arguments for programmatic use args <- ngr_spk_gdalwarp(   path_in = c(\"input1.tif\", \"input2.tif\"),   path_out = \"output.tif\",   s_srs = \"EPSG:4326\",   t_srs = \"EPSG:3857\",   target_resolution = c(0.1, 0.1) )  # Generate a full command for manual use cmd <- ngr_spk_gdalwarp(   path_in = c(\"input1.tif\", \"input2.tif\"),   path_out = \"output.tif\",   s_srs = \"EPSG:4326\",   t_srs = \"EPSG:3857\",   target_resolution = c(0.1, 0.1),   interactive = TRUE ) cat(cmd, \"\\n\") } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"function downloads single vector layer WFS (Web Feature Service) endpoint saves locally GeoJSON another supported format.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"","code":"ngr_spk_geoserv_dlv(   url_geoserver = \"https://maps.skeenasalmon.info/geoserver/ows\",   dir_out = NULL,   layer_name_raw = NULL,   layer_name_out = stringr::str_extract(layer_name_raw, \"(?<=:).*\"),   crs = 3005,   bbox = NULL,   format_out = \"json\",   discard_no_features = TRUE )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"url_geoserver character single URL string GeoServer WFS endpoint. dir_out character directory path output file saved. Must exist creatable. layer_name_raw character WFS layer name, usually including namespace (e.g., geonode:LayerName). layer_name_out character Optional. Output file name without extension. Defaults name extracted layer_name_raw. crs integer EPSG code coordinate reference system request server. Default 3005. bbox bbox numeric Optional. bounding box filter features spatially. Must CRS coercible. format_out character WFS output format. Common values: \"json\", \"GML2\", \"shape-zip\". Default \"json\" function need modified future accommodate formats. discard_no_features logical Optional. TRUE, automatically deletes downloaded files zero features. Default TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"Invisibly returns output file path success. Prints status messages console.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"default, layer_name_out inferred layer_name_raw removing namespace prefix (e.g., geonode:), common GeoServer layers. bounding box passed sf::st_bbox() object different CRS target CRS, transformed using sf::st_transform(). Regardless discard_no_features, function scan first lines downloaded GeoJSON file warn features found. discard_no_features = TRUE, empty file deleted.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_geoserv_dlv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a Vector Layer from a GeoServer WFS — ngr_spk_geoserv_dlv","text":"","code":"if (FALSE) { # \\dontrun{ dir_out <- \"data/gis/skt/esi_sows\" layer_name_raw <- \"geonode:UBulkley_wshed\" ngr_spk_geoserv_dl(   dir_out = dir_out,   layer_name_raw = layer_name_raw ) } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Join with Optional Mask Filtering and Column Selection — ngr_spk_join","title":"Spatial Join with Optional Mask Filtering and Column Selection — ngr_spk_join","text":"Joins target sf::sf object mask sf::sf object using specified spatial predicate. Optional filtering selection columns mask can applied.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Join with Optional Mask Filtering and Column Selection — ngr_spk_join","text":"","code":"ngr_spk_join(   target_tbl,   mask_tbl,   target_col_return = \"*\",   mask_col_return = NULL,   mask_col_filter = NULL,   mask_col_filter_values = NULL,   mask_col_filter_values_negate = FALSE,   join_fun = sf::st_intersects,   path_gpkg = NULL,   collapse = FALSE,   target_col_collapse = NULL,   ... )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Join with Optional Mask Filtering and Column Selection — ngr_spk_join","text":"target_tbl sf::sf target table spatially joined. mask_tbl character sf::sf mask table name (reading path_gpkg) sf object. target_col_return character vector target column names retain. Use \"*\" retain . mask_col_return character NULL Optional. vector mask column names retain. Default NULL. mask_col_filter character NULL Optional. single mask column name used filtering rows. mask_col_filter_values character NULL Optional. Values match (exclude) mask_col_filter. mask_col_filter_values_negate logical Whether exclude (TRUE) include (FALSE) matching rows. Default FALSE. join_fun function Spatial predicate function sf::st_intersects(), sf::st_within(), etc. Default sf::st_intersects. path_gpkg character NULL Optional. Path GeoPackage read mask_tbl already sf object. collapse logical Whether collapse results one amalgamated row multiple results one result returned. Default TRUE target_col_collapse character NULL Optional. target column name group facilitate collapsing result. ... Additional arguments passed sf::st_join().","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Join with Optional Mask Filtering and Column Selection — ngr_spk_join","text":"sf object result spatial join. target_col_return \"*\", selected columns returned.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_layer_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","title":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","text":"Extracts summarises information layers within spatial vector data source. Attempts determine geometry type layer querying sample feature.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_layer_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","text":"","code":"ngr_spk_layer_info(path)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_layer_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","text":"path character single string. Path vector spatial data source (e.g., GeoPackage shapefile).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_layer_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","text":"data.frame data frame available layers geometry types. layer contains geometry, error occurs reading, geomtype NA.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_layer_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Layers and Geometry Types in a Spatial Data Source — ngr_spk_layer_info","text":"Uses sf::st_layers() list available layers data source. layer, attempts read single feature using SQL query determines geometry type using sf::st_geometry_type(). Layers geometry errors reading safely assigned NA. driver column removed output may contain invalid entries data frame operations.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Docker Command Arguments for ODM — ngr_spk_odm","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"Generates arguments running OpenDroneMap Docker container (MUST RUNNING args PASSED ) specified project path. function can produce either vector arguments processx::run complete Docker command string ready copy paste terminal, depending interactive parameter. includes opinionated params_default optimized processing high-resolution imagery, producing outputs digital surface model (DSM) digital terrain model (DTM).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"","code":"ngr_spk_odm(   path_project,   params_default = c(\"--dtm\", \"--dsm\", \"--pc-quality\", \"low\", \"--dem-resolution\", \"10\"),   params_add = NULL,   interactive = FALSE )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"path_project character absolute path directory project held. Must valid directory. params_default character NULL Optional. character vector opinionated parameters include arguments. Defaults c(\"–dtm\", \"–dsm\", \"–cog\", \"–pc-quality\", \"low\", \"–dem-resolution\", \"10\"). params_add character NULL Optional. character vector additional parameters include arguments. interactive logical Whether include -ti flag interactive mode. TRUE, full command including docker returned single string terminal use. Default FALSE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"character vector arguments pass processx::run, single string full command terminal use interactive = TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"default, function generates DTM DSM outputs using --dtm --dsm flags.  --cog generation appears corrupted metadata writing left seperate step. Additional parameters can passed params_add character vector. interactive = TRUE, full command including docker returned single string terminal use. details steps arguments, see OpenDroneMap documentation: https://docs.opendronemap.org/arguments/","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_odm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Docker Command Arguments for ODM — ngr_spk_odm","text":"","code":"if (FALSE) { # \\dontrun{ path_project <- \"/Volumes/backup_2022/backups/new_graph/archive/uav_imagery/fraser/nechacko/2024/199174_necr_trib_dog\" args <- ngr_spk_odm(   path_project,   params_add = c(\"--rerun-from\", \"odm_dem\", \"--orthophoto-kmz\", \"--copy-to\", \"~/Projects\"),   interactive = FALSE ) processx::run(command = \"docker\", args = args, echo = TRUE)  # Generate a quick running command for interactive terminal use: interactive_command <- ngr_spk_odm(   path_project,   params_default = NULL,   params_add = c(\"--fast-orthophoto\",                \"--pc-quality\", \"low\",                \"--skip-report\",               \"--orthophoto-resolution\", \"20\"),               ,   interactive = TRUE   )  cat(interactive_command, \"\\n\")  #process multiple project files that contain `images` directory paths <- c(\"/Volumes/backup_2022/backups/new_graph/archive/uav_imagery/skeena/bulkley/2024/8530_sandstone_test\",            \"/Volumes/backup_2022/backups/new_graph/archive/uav_imagery/skeena/bulkley/2024/8530_sandstone_test2\")  args2 <- lapply(paths, ngr::ngr_spk_odm)  args2 |> purrr::walk(   ~ processx::run(     command = \"docker\",     args = .x,     echo = TRUE   ) ) } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_poly_to_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","title":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","text":"function generates regularly spaced grid points inside polygon given sf object assigns ID. point density determined specified column.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_poly_to_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","text":"","code":"ngr_spk_poly_to_points(sf_in, col_density, col_id = NULL)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_poly_to_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","text":"sf_in sf object containing polygon geometries. col_density character name column containing point density values per polygon. col_id character NULL name column use ID. Defaults \"id\" NULL.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_poly_to_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","text":"sf object containing generated points ID column.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_poly_to_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Regularly Spaced Points Inside Polygons — ngr_spk_poly_to_points","text":"","code":"poly <- sf::st_sf(   region = c(\"A\", \"B\"),   col_density = c(1, 5),   geometry = sf::st_sfc(     sf::st_polygon(list(rbind(c(0, 0), c(10, 0), c(10, 10), c(0, 10), c(0, 0)))),     sf::st_polygon(list(rbind(c(15, 15), c(20, 15), c(20, 20), c(15, 20), c(15, 15))))   ) )  points <- ngr_spk_poly_to_points(poly, col_density = \"col_density\", col_id = \"region\")  plot(sf::st_geometry(poly))  plot(sf::st_geometry(points), add = TRUE, col = \"red\", pch = 16)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"Computes combined spatial extent (bounding box) one raster files. ensures input rasters share CRS optionally reprojects bounding box specified CRS. function relies terra::ext(), terra::crs(), sf::st_bbox() extent extraction CRS handling.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"","code":"ngr_spk_rast_ext(x, crs_out = NULL)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"x character vector file paths, URLs, database connection strings raster data sources. path must exist accessible GDAL. crs_out character NULL Optional. CRS string (e.g., \"EPSG:4326\") reproject combined bounding box. NULL, CRS input rasters retained. Default NULL.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"bounding box object : xmin: Minimum x-coordinate. xmax: Maximum x-coordinate. ymin: Minimum y-coordinate. ymax: Maximum y-coordinate. crs_out specified, bounding box reprojected target CRS.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"function ensures input rasters share CRS computing union extents. resulting bounding box can reprojected target CRS crs_out provided. uses terra::ext() extract extents, terra::crs() check CRS consistency, sf::st_bbox() constructing reprojecting bounding box.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Combined Extent (Bounding Box) from Multiple Raster Files — ngr_spk_rast_ext","text":"","code":"if (FALSE) { # \\dontrun{ # Define input files files_in <- c(   \"/path/to/file1.tif\",   \"/path/to/file2.tif\",   \"/path/to/file3.tif\" )  # Get the combined extent without reprojection bbox_combined <- ngr_spk_rast_ext(files_in)  # Get the combined extent and reproject to EPSG:4326 bbox_reprojected <- ngr_spk_rast_ext(files_in, crs_out = \"EPSG:4326\") } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_not_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Raster Has Non-Zero Data — ngr_spk_rast_not_empty","title":"Check if Raster Has Non-Zero Data — ngr_spk_rast_not_empty","text":"Determines whether raster file contains non-zero values.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_not_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Raster Has Non-Zero Data — ngr_spk_rast_not_empty","text":"","code":"ngr_spk_rast_not_empty(f)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_not_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Raster Has Non-Zero Data — ngr_spk_rast_not_empty","text":"f character single file path raster file.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_not_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Raster Has Non-Zero Data — ngr_spk_rast_not_empty","text":"logical TRUE raster non-zero values, otherwise FALSE.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_rm_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Empty Raster Files — ngr_spk_rast_rm_empty","title":"Remove Empty Raster Files — ngr_spk_rast_rm_empty","text":"Scans directory raster files (e.g., .tif, .tiff, .vrt) removes contain zero values. Uses ngr_spk_rast_not_empty() check raster.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_rm_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Empty Raster Files — ngr_spk_rast_rm_empty","text":"","code":"ngr_spk_rast_rm_empty(   path = NULL,   delete = TRUE,   regexp = \"\\\\.(tif|tiff|vrt)$\",   quiet = FALSE )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_rm_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Empty Raster Files — ngr_spk_rast_rm_empty","text":"path character single path search raster files. delete logical Whether delete empty files. Default TRUE. quiet logical FALSE, prints messages files can removed. Default FALSE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_rast_rm_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Empty Raster Files — ngr_spk_rast_rm_empty","text":"character character vector paths raster files empty. Returns invisibly.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Resolution from a Raster — ngr_spk_res","title":"Extract Resolution from a Raster — ngr_spk_res","text":"function calculates extracts resolution (metres) single pixel (centre) raster file. determines central pixel raster, crops single pixel, returns resolution specified CRS. Uses terra::rast(), terra::ext(), terra::crop(), terra::project() perform operations.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Resolution from a Raster — ngr_spk_res","text":"","code":"ngr_spk_res(path, crs_out = \"EPSG:3005\")"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Resolution from a Raster — ngr_spk_res","text":"path character file path input raster. crs_out character desired CRS (default \"EPSG:3005\").","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Resolution from a Raster — ngr_spk_res","text":"numeric vector length two representing resolution single pixel metres specified CRS.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Resolution from a Raster — ngr_spk_res","text":"function first calculates extent resolution raster, identifies central pixel, crops raster pixel. projects cropped raster specified CRS calculates resolution single pixel.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_spk_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Resolution from a Raster — ngr_spk_res","text":"","code":"path <- system.file(\"extdata\", \"test.tif\", package = \"ngr\") crs_out <- \"EPSG:32609\" ngr_spk_res(path, crs_out) #> Error: [rast] filename is empty. Provide a valid filename"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"function aggregates numeric columns data frame sf object rows based specified aggregation function (e.g., mean(), sum(), median()). allows column inclusion/exclusion using string matching supports rational rounding.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"","code":"ngr_str_df_col_agg(   dat,   col_str_match,   col_result,   fun = \"mean\",   col_str_negate = NULL,   decimal_places = 1 )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"dat data.frame sf::sf object. input data. col_str_match character string match column names aggregation. col_result character name resulting column aggregated values. fun character aggregation function use. Options \"mean\", \"sum\", \"median\", \"min\", \"max\". Default \"mean\". col_str_negate character (Optional) string exclude matching columns aggregation. Default NULL. decimal_places numeric Number decimal places rounding. Default 1.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"input dat new column named col_result containing aggregated values.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"function identifies columns matching col_str_match excluding matching col_str_negate, applies specified aggregation function row-wise. attaches result new column input data. result column exists within dataframe updated aggregated values. Rounding performed using rational rounding (e.g., 1.55 rounds 1.6).","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_col_agg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Numeric Columns by Row — ngr_str_df_col_agg","text":"","code":"# Load example data  dat_raw <- data.frame(   channel_width_m_1 = c(5.0, 4.2, 6.3, NA, 5.5),   channel_width_m_2 = c(5.5, 4.0, 6.1, NA, 5.8),   wetted_width_m_1 = c(3.0, 2.8, 3.5, NA, 3.3),   wetted_width_m_2 = c(3.2, 2.9, 3.4, NA, 3.6),   residual_pool_m_1 = c(0.8, 0.7, 0.9, NA, 0.85),   residual_pool_m_2 = c(0.75, 0.65, 0.92, NA, 0.88),   gradient_percent_1 = c(2.5, 2.0, 3.0, NA, 2.7),   gradient_percent_2 = c(2.6, 2.1, 3.1, NA, 2.8),   bankfull_depth_m_1 = c(1.2, 1.1, 1.3, NA, 1.25),   bankfull_depth_m_2 = c(1.15, 1.05, 1.35, NA, 1.3),   wetted_width_m_2.channel_width_m_2_time = c(\"2023-12-01\", \"2023-12-02\", \"2023-12-03\", NA, \"2023-12-05\"),   method_for_wetted_width = c(\"manual\", \"manual\", \"manual\", NA, \"manual\"),   method_for_channel_width = c(\"automatic\", \"automatic\", \"automatic\", NA, \"automatic\"),   avg_channel_width_m = NA_real_,   avg_wetted_width_m = NA_real_,   average_residual_pool_depth_m = NA_real_,   average_gradient_percent = NA_real_,   average_bankfull_depth_m = NA_real_ )  col_str_negate = \"time|method|avg|average\" col_str_to_agg <- c(\"channel_width\", \"wetted_width\", \"residual_pool\", \"gradient\", \"bankfull_depth\") columns_result <- c(\"avg_channel_width_m\", \"avg_wetted_width_m\", \"average_residual_pool_depth_m\", \"average_gradient_percent\", \"average_bankfull_depth_m\")  # Initialize dat as a copy of dat_raw to preserve the original and allow cumulative updates dat <- dat_raw  # Use mapply with cumulative updates # Suppress mapply output by assigning it to invisible invisible(mapply(   FUN = function(col_str_match, col_result) {     # Update dat cumulatively using double assignment operator to update each already updated version of the dataframe     dat <<- ngr_str_df_col_agg(       dat = dat,  # Use the updated dat for each iteration       col_str_match = col_str_match,       col_result = col_result,       col_str_negate = col_str_negate,       decimal_places = 1     )   },   col_str_match = col_str_to_agg,   col_result = columns_result ))  # Print the first few rows of the resulting data after subsetting for clarity dat_subset <- dat[1:5, grep(\"average|avg\", names(dat))] head(dat_subset) #>   avg_channel_width_m avg_wetted_width_m average_residual_pool_depth_m #> 1                 5.3                3.1                           0.8 #> 2                 4.1                2.8                           0.7 #> 3                 6.2                3.5                           0.9 #> 4                  NA                 NA                            NA #> 5                 5.7                3.5                           0.9 #>   average_gradient_percent average_bankfull_depth_m #> 1                      2.6                      1.2 #> 2                      2.1                      1.1 #> 3                      3.1                      1.3 #> 4                       NA                       NA #> 5                      2.8                      1.3 if (FALSE) { # \\dontrun{ #'Load the geopackage shipped with the package path <- system.file(\"extdata\", \"form_fiss_site_2024.gpkg\", package = \"ngr\")  dat_raw <- sf::st_read(path)  # Use purrr::reduce with cumulative updates dat <- purrr::reduce(   .x = seq_along(col_str_to_agg),   .f = function(acc_df, i) {     ngr_str_df_col_agg(       dat = acc_df,       col_str_match = col_str_to_agg[i],       col_result = columns_result[i],       col_str_negate = col_str_negate,       decimal_places = 1     )   },   .init = dat_raw )  # Print the first few rows of the resulting data # Convert to a plain data.frame dat_subset <- dat[1:5, grep(\"average|avg\", names(dat))] head(dat_subset) } # }"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_detect_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Rows Based on String Detection in a Column Detected with a partial String Match — ngr_str_df_detect_filter","title":"Filter Rows Based on String Detection in a Column Detected with a partial String Match — ngr_str_df_detect_filter","text":"function filters rows data frame specified column's name matches pattern values column contain specified string.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_detect_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Rows Based on String Detection in a Column Detected with a partial String Match — ngr_str_df_detect_filter","text":"","code":"ngr_str_df_detect_filter(x, col_filter, str_filter)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_detect_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Rows Based on String Detection in a Column Detected with a partial String Match — ngr_str_df_detect_filter","text":"x data.frame input data frame filter. col_filter character single string representing pattern match column names. str_filter character single string match within values filtered column.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_df_detect_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Rows Based on String Detection in a Column Detected with a partial String Match — ngr_str_df_detect_filter","text":"filtered data frame matching rows found; otherwise, original data frame returned.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the Presence of a Specific File in a Directory — ngr_str_dir_from_file","title":"Detect the Presence of a Specific File in a Directory — ngr_str_dir_from_file","text":"function checks specific file exists given directory optionally subdirectories.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the Presence of a Specific File in a Directory — ngr_str_dir_from_file","text":"","code":"ngr_str_dir_from_file(path_dir, file_name, recurse = FALSE, ...)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the Presence of a Specific File in a Directory — ngr_str_dir_from_file","text":"path_dir character single string representing directory path search. file_name character string specifying name file detect. recurse logical Whether search recursively subdirectories. Default FALSE. ... Additional arguments passed fs::dir_ls().","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the Presence of a Specific File in a Directory — ngr_str_dir_from_file","text":"character directory path file found; otherwise, warning issued.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","title":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","text":"function retrieves directory name specified level(s) given file path. wraps fs::path_dir() navigate directory levels basename() extract final directory name. Particularly useful retrieving repo name can converted url html link ngr_str_link_repo().","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","text":"","code":"ngr_str_dir_from_path(path, levels = 1)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","text":"path character single string. file path. levels integer single integer. number levels traverse file path extract directory name. Default 1.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","text":"character single string representing directory name specified level.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_dir_from_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Directory Name from File or Directory Path Based on Levels — ngr_str_dir_from_path","text":"","code":"ngr_str_dir_from_path(\"~/Projects/repo/ngr/data-raw/extdata.R\", levels = 2) #> [1] \"ngr\" # Returns \"ngr\""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_link_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","title":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","text":"function generates HTML <> tag linking url url related specified repository resource GitHub Pages site hosted repository. particularly useful embedding links html tables DT tables.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_link_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","text":"","code":"ngr_str_link_url(   url_base = \"https://www.newgraphenvironment.com\",   url_resource = NULL,   url_resource_path = TRUE,   anchor_text = \"url_link\",   target = \"_blank\" )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_link_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","text":"url_base character character vector specifying either URL(s) link (url_resource provided) base URL(s) repository host. Default New Graph gitpages https://www.newgraphenvironment.com. https://github.com/NewGraphEnvironment gets repository . url_resource character character vector representing repository name(s) linked. Optional. Default NULL. url_resource_path logical logical value indicating whether include / url_base url_resource. Defaults TRUE. set FALSE, facilitates constructing file paths url_base url_resource without / , useful API calls tile servers. anchor_text character character vector specifying text displayed link. Defaults \"url_link\". target character single string indicating target attribute HTML link. Default \"_blank\". Options include: \"_blank\": Opens link new tab window. \"_self\": Opens link tab window. \"_parent\": Opens link parent frame, applicable. \"_top\": Opens link full body window, ignoring frames.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_link_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","text":"character character vector containing HTML <> tags.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_link_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTML Link to Repository Resources or GitHub Pages — ngr_str_link_url","text":"","code":"# Example 1: Link to the repository with default anchor text ngr_str_link_url(\"ngr\", url_base = \"https://github.com/NewGraphEnvironment\") #> [1] \"<a href=\\\"https://github.com/NewGraphEnvironment/ngr\\\" target=\\\"_blank\\\">url_link<\/a>\"  # Example 2: Link to GitHub Pages with anchor text set to the repository name ngr_str_link_url(url_resource = \"ngr\", anchor_text = \"ngr\") #> [1] \"<a href=\\\"https://www.newgraphenvironment.com/ngr\\\" target=\\\"_blank\\\">ngr<\/a>\"  # Example 3: Link with no url_resource ngr_str_link_url(url_base = \"https://www.newgraphenvironment.com\", anchor_text = \"Visit New Graph\") #> [1] \"<a href=\\\"https://www.newgraphenvironment.com\\\" target=\\\"_blank\\\">Visit New Graph<\/a>\"  # Example 4: Use in a dplyr::mutate() library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union df <- data.frame(   url_resource = c(\"ngr\", \"fpr\"),   url_base = c(\"https://github.com/NewGraphEnvironment\", \"https://www.newgraphenvironment.com\") ) df <- df %>%   mutate(     link = ngr_str_link_url(url_resource = url_resource, url_base = url_base, anchor_text = url_resource)   ) print(df$link) #> [1] \"<a href=\\\"https://github.com/NewGraphEnvironment/ngr\\\" target=\\\"_blank\\\">ngr<\/a>\" #> [2] \"<a href=\\\"https://www.newgraphenvironment.com/fpr\\\" target=\\\"_blank\\\">fpr<\/a>\""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","title":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","text":"function renames files directories replacing occurrences specified text new text. allows exclusions inclusions using glob patterns provides option confirm changes applying .","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","text":"","code":"ngr_str_replace_filenames(   path = \".\",   text_current,   text_replace,   glob_exclude = \".git\",   glob_include = NULL,   ask = TRUE )"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","text":"path character vector one paths. root directory start searching files directories. text_current character string representing text replaced filenames. text_replace character string representing new text replace current text filenames. glob_exclude character glob pattern exclude specific paths renaming. Default \".git\". glob_include character NULL glob pattern include specific files directories. Default NULL. ask logical Whether prompt user confirmation renaming. Default TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","text":"NULL invisibly completing renaming operation.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_filenames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename Files and Directories Containing Specific Text — ngr_str_replace_filenames","text":"function uses stringr::str_detect() find filenames containing specified text_current excludes text_replace already present. renames files directories accordingly using fs::file_move().","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_in_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bulk Find-and-Replace on Multiple Files Using stringr — ngr_str_replace_in_files","title":"Perform Bulk Find-and-Replace on Multiple Files Using stringr — ngr_str_replace_in_files","text":"function explicitly reads content files, performs find--replace operations using stringr, writes updated content back files. handles word boundaries, trailing punctuation, allows specific symbols like @ precede text replaced.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_in_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bulk Find-and-Replace on Multiple Files Using stringr — ngr_str_replace_in_files","text":"","code":"ngr_str_replace_in_files(text_current, text_replace, files, ask = TRUE)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_in_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bulk Find-and-Replace on Multiple Files Using stringr — ngr_str_replace_in_files","text":"text_current character string representing text replaced filenames. text_replace character string representing new text replace current text filenames. ask logical Whether prompt user confirmation renaming. Default TRUE.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_str_replace_in_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bulk Find-and-Replace on Multiple Files Using stringr — ngr_str_replace_in_files","text":"logical Invisibly returns logical vector indicating success file.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_rm_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","title":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","text":"ngr_tidy_cols_rm_na removes columns data.frame every value NA. can particularly helper attempting join data.frames due type conflicts occur due columns NA values.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_rm_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","text":"","code":"ngr_tidy_cols_rm_na(df)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_rm_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","text":"df data.frame. input data frame cleaned.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_rm_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","text":"data.frame columns containing NA values removed.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_rm_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Columns with All NA Values — ngr_tidy_cols_rm_na","text":"","code":"# Example data frame df <- data.frame(   A = c(NA, NA, NA),   B = c(1, 2, NA),   C = c(NA, NA, NA),   D = c(\"x\", \"y\", NA) )  # Apply the function tidy_df <- ngr_tidy_cols_rm_na(df)  # Result print(tidy_df) #>    B    D #> 1  1    x #> 2  2    y #> 3 NA <NA>"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"function checks column type consistency across multiple dataframes nested list.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"","code":"ngr_tidy_cols_type_compare(nested_list_df)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"nested_list_df list named list dataframes, dataframe expected consistent column names.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"data.frame following columns: col_name: name column. types: comma-separated string unique types found column across datasets. consistent: logical value indicating whether column types consistent across datasets.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"function inspects class column across list dataframes. aggregates unique types column determines column types consistent across datasets list.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_cols_type_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Column Type Consistency Across Nested Dataframes — ngr_tidy_cols_type_compare","text":"","code":"nested_list_df <- list(   df1 = data.frame(a = 1:3, b = c(\"x\", \"y\", \"z\"), c = as.Date(\"2023-01-01\") + 0:2, stringsAsFactors = FALSE),   df2 = data.frame(a = c(1.1, 2.2, 3.3), b = c(\"x\", \"y\", \"z\"), c = c(TRUE, FALSE, TRUE), stringsAsFactors = FALSE),   df3 = data.frame(a = c(\"one\", \"two\", \"three\"), b = c(\"x\", \"y\", \"z\"), c = as.Date(\"2023-01-01\") + 0:2, stringsAsFactors = FALSE) ) ngr_tidy_cols_type_compare(nested_list_df) #>   col_name                       types consistent #> 1        a integer, numeric, character      FALSE #> 2        b                   character       TRUE #> 3        c               Date, logical      FALSE"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce column types in one data frame to match another — ngr_tidy_type","title":"Coerce column types in one data frame to match another — ngr_tidy_type","text":"function ensures shared columns dat_to_type coerced match data types corresponding columns dat_w_types.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce column types in one data frame to match another — ngr_tidy_type","text":"","code":"ngr_tidy_type(dat_w_types, dat_to_type)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce column types in one data frame to match another — ngr_tidy_type","text":"dat_w_types data.frame Reference data frame desired column types. dat_to_type data.frame Data frame coerced match dat_w_types.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce column types in one data frame to match another — ngr_tidy_type","text":"data.frame dat_to_type shared columns coerced types dat_w_types.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_tidy_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce column types in one data frame to match another — ngr_tidy_type","text":"","code":"dat_w_types <- data.frame(a = as.numeric(1:3), b = as.character(4:6)) dat_to_type <- data.frame(a = as.character(1:3), b = 4:6) ngr_tidy_type(dat_w_types, dat_to_type) #> Successfully converted column a to numeric. #> Successfully converted column b to character. #>   a b #> 1 1 4 #> 2 2 5 #> 3 3 6"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"function reads rownames specific sheet row Excel file, maps excel column id (address).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"","code":"ngr_xl_map_colnames(path, sheet, row_id)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"path character path Excel file read. Must valid file path. sheet character name sheet extract formulas. Must specified. row_id numeric row number filter names . Must specified.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"data frame column names, column names cleaned (lower snakecase) associated excel column id (address), excel address without row number (tying formulas).","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"uses tidyxl::xlsx_cells() parse Excel file filters cells based provided sheet name row ID. Removes row ids excel addresses tidies column names using janitor::make_clean_names() function reads Excel file filters cells extract formulas specified sheet row. output includes unique formulas target row.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Formulas from an Excel Worksheet — ngr_xl_map_colnames","text":"","code":"path <- system.file(\"extdata\", \"pscis_phase1.xlsm\", package = \"ngr\") ngr_xl_map_colnames(path, sheet = \"PSCIS Assessment Worksheet\", row_id = 4) #> # A tibble: 42 × 4 #>    address character                       address_rowless names_clean           #>    <chr>   <chr>                           <chr>           <chr>                 #>  1 A4      Date of Assessment (YYYY-MM-DD) A               date_of_assessment_y… #>  2 B4      PSCIS Crossing ID               B               pscis_crossing_id     #>  3 C4      My Crossing Reference           C               my_crossing_reference #>  4 D4      Crew Members                    D               crew_members          #>  5 E4      UTM Zone                        E               utm_zone              #>  6 F4      Easting                         F               easting               #>  7 G4      Northing                        G               northing              #>  8 H4      Stream Name                     H               stream_name           #>  9 I4      Road Name                       I               road_name             #> 10 J4      Road KM Mark                    J               road_km_mark          #> # ℹ 32 more rows"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","title":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","text":"function reads single row formulas (formulas working columns within row spreadsheet fomula located) column names specific sheet rows Excel file. uses tidyxl::xlsx_cells() parse Excel file uses ngr helper functions ngr_xl_read_formulas() ngr_xl_map_colnames() clean formulas column names. Column names subbed place excel addresses (now) formulas can passed LLMs convert excel syntax R.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","text":"","code":"ngr_xl_map_formulas(path, sheet, rowid_colnames, rowid_formulas)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","text":"path character path Excel file read. Must valid file path. sheet character name sheet extract formulas /row names. Must specified. rowid_colnames numeric single row number used extract column names. rowid_formulas numeric vector row numbers filter formulas . Must specified.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","text":"data frame following columns: address_rowless Excel address without row ID appended. address Raw Excel column identifier. row Row number Excel spreadsheet formula extracted. formula Raw formula appears Excel spreadsheet. formula_rowless Formula row numbers referenced cells removed, aligned address_rowless. formula_colname Column name indicating formula located Excel spreadsheet. formula_with_col_names Excel formula associated column names substituted Excel addresses.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_map_formulas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Formulas and Column Names from an Excel Worksheet and Combine to Aid in Transformation of Formulas to R — ngr_xl_map_formulas","text":"","code":"path <- system.file(\"extdata\", \"pscis_phase1.xlsm\", package = \"ngr\") result <- ngr_xl_map_formulas(path, sheet = \"PSCIS Assessment Worksheet\", rowid_colnames = 4, rowid_formulas = c(5, 6)) result[, c(\"formula_colname\", \"formula_with_col_names\")][7, ] #>   formula_colname #> 7     final_score #>                                                                                    formula_with_col_names #> 7 culvert_length_score + embed_score + outlet_drop_score + culvert_slope_score + stream_width_ratio_score"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"function reads single row formulas (formulas working columns within row spreadsheet fomula located) specific sheet row Excel file. uses tidyxl::xlsx_cells() parse Excel file filters cells based provided sheet name row ID. processes formulas remove row specific addresses can abstracted R less friction. Designed helper function work ngr_xl_map_colnames().","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"","code":"ngr_xl_read_formulas(path, sheet, row_id)"},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"path character path Excel file read. Must valid file path. sheet character name sheet extract formulas. Must specified. row_id numeric row number filter formulas . Must specified. Can vector rows (ie. c(5,6))","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"data frame unique formulas associated metadata specified sheet row.","code":""},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"function reads Excel file filters cells extract formulas specified sheet row. output includes unique formulas target row.","code":""},{"path":[]},{"path":"https://newgraphenvironment.github.io/ngr/reference/ngr_xl_read_formulas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Single Row Formulas from an Excel Worksheet — ngr_xl_read_formulas","text":"","code":"path <- system.file(\"extdata\", \"pscis_phase1.xlsm\", package = \"ngr\") res <- ngr_xl_read_formulas(path, sheet = \"PSCIS Assessment Worksheet\", row_id = c(5,6)) res[, \"formula_rowless\"] #> # A tibble: 8 × 1 #>   formula_rowless                                                                #>   <chr>                                                                          #> 1 \"IF(ISBLANK(Z), 0, IF(ISBLANK(N) < 0, 0,Z / N))\"                               #> 2 \"IF(O<15,0,IF(AND(O>=15,O<30),3,IF(O>=30,6,0)))\"                               #> 3 \"IF(P = \\\"No\\\", 10, IF(ISBLANK(N), 0, IF(ISBLANK(Q), 0, IF(OR(Q / N <= 0.2, Q… #> 4 \"IF(V<0.15,0,IF(AND(V>=0.15,V<0.3),5,IF(V>=0.3,10,0)))\"                        #> 5 \"IF(Y<1,0,IF(AND(Y>=1,Y<3),5,IF(Y>=3,10,0)))\"                                  #> 6 \"IF(AF<1,0,IF(AND(AF>=1,AF<1.3),3,IF(AF>=1.3,6,0)))\"                           #> 7 \"AG + AH + AI + AJ + AK\"                                                       #> 8 \"IF(ISBLANK(L), \\\"\\\", IF(L = \\\"Open Bottom Structure\\\", \\\"Passable\\\", IF(L = …"},{"path":"https://newgraphenvironment.github.io/ngr/news/index.html","id":"ngr-001-2025-05-16","dir":"Changelog","previous_headings":"","what":"ngr 0.0.1 (2025-05-16)","title":"ngr 0.0.1 (2025-05-16)","text":"initial commit [ngr_git_issue_details()] close https://github.com/NewGraphEnvironment/ngr/issues/10 initial commit [ngr_git_issue()] close https://github.com/NewGraphEnvironment/ngr/issues/11 initial commit ngr_spk_geoserv_dlv() initial commit ngr_spk_layer_info() initial commit ngr_spk_join() initial commit [ngr_spk_poly_to_points()] initial commit [ngr_spk_gdalwarp ()] close https://github.com/NewGraphEnvironment/ngr/issues/6 initial commit [ngr_spk_res()] close #4 https://github.com/NewGraphEnvironment/ngr/issues/4 initial commit [ngr_spk_ext_raster()] close #5 https://github.com/NewGraphEnvironment/ngr/issues/5 initial commit [ngr_odm_args()] close #3 initial commit ngr_xl_read_formulas(), ngr_xl_map_colnames() ngr_xl_map_formulas() close #1 initial commit ngr_xfm_xl_read_formulas() address fpr #98 initial commit ngr_str_df_col_agg() initial commit ngr_s3_dl() initial commits ngr_dbqs_filter_predicate ngr_dbqs_tbl_quote","code":""},{"path":"https://newgraphenvironment.github.io/ngr/news/index.html","id":"ngr-0009002-2025-01-03","dir":"Changelog","previous_headings":"","what":"ngr 0.0.0.9002 (2025-01-03)","title":"ngr 0.0.0.9002 (2025-01-03)","text":"initial commit ngr_s3_files_to_index ngr_s3_path_to_https change name ngr_str_link_repo ngr_str_link_url make flexible url without repo_source can provided initial commit development workflow function calls initial commit ngr_pkg_detach initial commit ngr_tidy_cols_type_compare change name “ngr_str_repo_link” “ngr_str_link_repo” initial commit ngr_str_dir_from_file initial commit ngr_str_df_detect_filter","code":""},{"path":"https://newgraphenvironment.github.io/ngr/news/index.html","id":"ngr-0009001-2024-12-27","dir":"Changelog","previous_headings":"","what":"ngr 0.0.0.9001 (2024-12-27)","title":"ngr 0.0.0.9001 (2024-12-27)","text":"initial commit ngr_tidy_cols_rm_na initial commit ngr_str_dir_from_path initial commit ngr_str_repo_link add lifecycle badges add ngr_str_replace_in_files.R","code":""}]
